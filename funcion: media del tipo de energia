#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define N 1000

typedef struct {
    char energia[N];
    double numeros[24];
} Dato;

int fila;
int calculomediaporenergias(const char *nombreArchivoCSV, const char *nombreArchivoTXT, int fil) {
    FILE *archivoCSV = fopen(nombreArchivoCSV, "r"); // Lee el archivo CSV
    FILE *archivoTXT = fopen(nombreArchivoTXT, "w"); // Escribe el archivo de texto resultante

    if (archivoCSV == NULL || archivoTXT == NULL) {
        printf("Error al abrir los archivos.\n");
        return 1;
    }

    Dato datos[N];
    char linea[N];
    int indice = 0;

    while (fgets(linea, N, archivoCSV) != NULL) {
        char *token = strtok(linea, ",");
        strncpy(datos[indice].energia, token, N);

        for (int i = 0; i < 24; i++) {
            token = strtok(NULL, ",");
            datos[indice].numeros[i] = atof(token);
        }

        indice++;
    }

    int numRegistros = indice;
    fila=fil;

    int fila;
    printf("Ingrese el número de fila para calcular la media (1-%d): ", numRegistros);
    scanf("%d", &fila);

    if (fila < 1 || fila > numRegistros) {
        printf("Número de fila inválido.\n");
        return 1;//verifica que el numero de fila es valido
    }

    double suma = 0.0;//almacena la suma de los numeros de la fila seleccionada

    for (int i = 0; i < 24; i++) {
        suma += datos[fila - 1].numeros[i];

    }

    double media = suma / 24;//divide suma entre el numero de columnas

    printf("Media de la energía seleccionada durante los años 2021 y 2022: %.2lf\n GWh",media);
    fprintf(archivoTXT, "Media de la energía seleccionada durante los años 2021 y 2022: %.2lf\n GWh",media);

    //printf("Archivo generado exitosamente: \n");

    fclose(archivoCSV);
    fclose(archivoTXT);

    return 0;
}
//////para el main:
////    const char *nombreArchivoCSV = "re.csv";
////    const char *nombreArchivoTXT = "calculomediaporenergias.txt";
////    int fila;
////
////    calculomediaporenergias(nombreArchivoCSV, nombreArchivoTXT, fila);
////
////    return 0;
////}
